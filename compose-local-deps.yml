# Note: When running locally in ubuntu in order for ElasticSearch to wrok 
# you will need to run 
# sysctl -w vm.max_map_count=262144
version: '2'
services:
  equality-checker:
    network_mode: bridge
    container_name: equality-checker
    image: ucamcldtg/equality-checker
    ports:
      - "5000:5000"
  chemistry-checker:
    network_mode: bridge
    container_name: chemistry-checker
    image: ucamcldtg/chemistry-checker
    ports:
      - "5001:5000"
    volumes:
      - ../.m2:/root/.m2:rw

  elasticsearch:
    network_mode: bridge
    container_name: elasticsearch
    image: elasticsearch:5.0.1
    volumes:
      - ./elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro
    ports:
      - "9200-9400:9200-9400"
  elasticsearch-exporter:
    image: justwatch/elasticsearch_exporter:1.0.2
    container_name: elasticsearch-exporter
    command:
     - '-es.uri=http://elasticsearch:9200'
    network_mode: bridge
    links:
      - elasticsearch:elasticsearch
    ports:
      - 9108:9108

  postgres:
    network_mode: bridge
    container_name: postgres
    image: isaac-pg
    ports:
      - "5432:5432"
  postgres-exporter:
    # if this isn't working run ./initialise_local_environment.sh
    network_mode: bridge
    image: wrouesnel/postgres_exporter
    container_name: postgres-exporter
    environment:
      - DATA_SOURCE_URI=postgres:5432/rutherford?sslmode=disable
      - DATA_SOURCE_USER=$POSTGRES_DB_USER
      - DATA_SOURCE_PASS=$POSTGRES_DB_PASSWORD
    links:
      - postgres:postgres
    ports:
      - 9187:9187

  app-physics:
    network_mode: bridge
    container_name: app-physics
    image: nginx:1.13.8
    volumes:
      - "../isaac-app/app:/usr/share/nginx/html:ro"
      - "../isaac-app/nginx.conf:/etc/nginx/nginx.conf:ro"
    ports:
      - "8000:80"
  app-chemistry:
    network_mode: bridge
    container_name: app-chemistry
    image: nginx:1.13.8
    volumes:
      - "../isaac-app/app:/usr/share/nginx/html:ro"
      - "../isaac-app/nginx.conf:/etc/nginx/nginx.conf:ro"
    ports:
      - "8001:80"
  app-biology:
    network_mode: bridge
    container_name: app-biology
    image: nginx:1.13.8
    volumes:
      - "../isaac-app/app:/usr/share/nginx/html:ro"
      - "../isaac-app/nginx.conf:/etc/nginx/nginx.conf:ro"
    ports:
      - "8002:80"

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./prometheus-local.yml:/etc/prometheus/prometheus.yml
    network_mode: bridge
    links:
      - postgres-exporter:postgres-exporter
      - kafka-exporter:kafka-exporter
      - elasticsearch-exporter:elasticsearch-exporter
    ports:
      - 9090:9090

  grafana:
    image: grafana/grafana
    container_name: grafana
    environment:
      - GF_DATABASE_TYPE=sqlite3
      - GF_SECURITY_ADMIN_USER=grafana
      - GF_SECURITY_ADMIN_PASSWORD=grafana
      - GF_AUTH_ANONYMOUS_ENABLED=false
      - GF_AUTH_BASIC_ENABLED=false
    volumes:
      - ./grafana-db:/var/lib/grafana
    network_mode: bridge
    links:
      - prometheus:prometheus
    ports:
      - 3000:3000

networks:
  default:
    external:
      name: bridge
